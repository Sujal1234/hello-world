/**
 * Grab the pellets as fast as you can!
 **/

function dist(x1, y1, x2, y2){
    return Math.abs(x1-x2) + Math.abs(y1-y2);
}

var inputs = readline().split(' ');
const width = parseInt(inputs[0]); // size of the grid
const height = parseInt(inputs[1]); // top left corner is (x=0, y=0)
for (let i = 0; i < height; i++) {
    const row = readline(); // one line of the grid: space " " is floor, pound "#" is wall
}
var myXs = [];
var myYs = [];
var pacIds=[];

// game loop
while (true) {
    var inputs = readline().split(' ');
    const myScore = parseInt(inputs[0]);
    const opponentScore = parseInt(inputs[1]);
    const visiblePacCount = parseInt(readline()); // all your pacs and enemy pacs in sight
    
    var targetXs = new Array(myXs.length);
    var targetYs = new Array(myXs.length);

    for (let i = 0; i < visiblePacCount; i++) {
        var inputs = readline().split(' ');
        const pacId = parseInt(inputs[0]); // pac number (unique within a team)
        const mine = inputs[1] !== '0'; // true if this pac is yours
        const x = parseInt(inputs[2]); // position in the grid
        const y = parseInt(inputs[3]); // position in the grid
        const typeId = inputs[4]; // unused in wood leagues
        const speedTurnsLeft = parseInt(inputs[5]); // unused in wood leagues
        const abilityCooldown = parseInt(inputs[6]); // unused in wood leagues

        if(mine){
            myXs.push(x);
            myYs.push(y);
            pacIds.push(pacId);
        }
    }
    const visiblePelletCount = parseInt(readline()); // all pellets in sight

    var nearestDists=new Array(myXs.length);

    for(var i=0; i<nearestDists.length;i++){
        nearestDists.push(Infinity);
    }

    for (let i = 0; i < visiblePelletCount; i++) {

        var inputs = readline().split(' ');
        const x = parseInt(inputs[0]);
        const y = parseInt(inputs[1]);
        const value = parseInt(inputs[2]); // amount of points this pellet is worth

        for(var i=0;i<myXs.length;i++){
            var d = dist(myXs[i], myYs[i], x, y);

            if(d < nearestDists[i]){
                nearestDists[i] = d;
                targetXs[i] = x;
                targetYs[i] = y;
            }
        }
    }

    // Write an action using console.log()
    // To debug: console.error('Debug messages...');
 
    for(var i=0;i < myXs.length;i++){
        console.log('MOVE'+' '+pacIds[i]+' '+targetXs[i]+' '+targetYs[i]);
    }
}
